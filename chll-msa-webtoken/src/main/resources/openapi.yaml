openapi: 3.0.0
info:
  title: API Token Management
  description: API that allows to generate an authentication token, expiration time and validation.
  contact:
    email: oscar.sarcoss@outlook.com
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: User
    description: User Controller
  - name: Token
    description: Token Controller
paths:
  /users:
    post:
      tags:
        - User
      summary: Create new user
      operationId: PostUser
      requestBody:
        content:
          application/json; charset=UTF-8:
            schema:
              $ref: '#/components/schemas/PostUserRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PostUserResponse'
        '400':
          description: Bad Request
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /tokens/generate:
    get:
      tags:
        - Token
      summary: Generate a new token for a user.
      operationId: GetGenerateToken
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/GetGenerateTokenResponse'
        '400':
          description: Bad Request
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: Not Found
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /tokens/use:
    post:
      tags:
        - Token
      summary: Using a token
      operationId: PostToken
      parameters:
        - $ref: '#/components/parameters/userId'
        - $ref: '#/components/parameters/token'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: Not Found
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'

  /tokens:
    get:
      tags:
        - Token
      summary: Get all tokens generated by a user.
      operationId: GetUserTokens
      parameters:
        - $ref: '#/components/parameters/userId'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserTokensResponse'
        '400':
          description: Bad Request
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '404':
          description: Not Found
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
        '500':
          description: Internal Server Error
          content:
            application/json; charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
components:
  parameters:
    userId:
      name: userId
      in: query
      description: User ID.
      required: true
      schema:
        type: string
        example: '9ce2472d-9ccb-47c7-9a0b-907b638a49bf'
    token:
      name: token
      in: query
      description: Token Value.
      required: true
      schema:
        type: string
        example: '123456'

  schemas:
    PostUserRequest:
      type: object
      properties:
        fullName:
          type: string
          example: John Doe
        identification:
          type: string
          example: "0999999999"
        email:
          type: string
          example: john@doe.com
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
      required:
        - fullName
        - identification
        - email
    PostUserResponse:
      properties:
        userId:
          type: string
          example: 9ce2472d-9ccb-47c7-9a0b-907b638a49bf
    GetGenerateTokenResponse:
      type: object
      properties:
        tokenId:
          type: string
          example: b3a0d4f8-3f27-4f69-a23d-9c62a0decb97
        token:
          type: string
          example: '123456'
        generationDate:
          type: string
          format: date-time
          example: '2025-02-23T15:00:00Z'
        expirationDate:
          type: string
          format: date-time
          example: '2025-02-23T15:10:00Z'
    GetUserTokensResponse:
      type: array
      items:
        type: object
        properties:
          user:
            $ref: '#/components/schemas/User'
          token:
            type: string
          generationDate:
            type: string
            format: date-time
            example: '2025-02-23T15:00:00Z'
          expirationDate:
            type: string
            format: date-time
            example: '2025-02-23T15:10:00Z'
          isUsed:
            type: boolean
            example: false
    User:
      type: object
      properties:
        identification:
          type: string
        fullName:
          type: string
        status:
          type: string
        email:
          type: string
    ErrorDTO:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
